plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.11'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'io.freefair.lombok' version '6.4.0' // Lombok 플러그인
}

group = 'com.padaks'
version = '0.0.1-SNAPSHOT'

java {
	// 자바 버전
	sourceCompatibility = '11'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }  // JitPack 리포지토리 추가
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	//	mapstruct를 사용하기 위한 의존선 라이브러리
	implementation "org.mapstruct:mapstruct:1.5.3.Final"
//	Mapstruct로 각 데이터 매퍼의 클래스를 생성하기 위해 Annotation-processor 를 추가해 주어야함
	annotationProcessor "org.mapstruct:mapstruct-processor:1.5.3.Final"
//	Lombok 과 Mapstruct 충돌을 없애기 위해 어노테이션 프로세서를 선언해줘야함.
//	이를 하지 않으면 롬복과 호출 순서에서 충돌이 있을 수 있다. -> Mapstruct 가 롬복의 getter, setter ,builder 를 사용하기 때문
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// 파일처리를 위한 aws 의존성 추가
	implementation 'software.amazon.awssdk:s3:2.17.58'
	//	feignclient 의존성
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

//	localdatetime 형식을 redis 에 넣기 위한 의존성
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	// iamPort 의존성 추가
	implementation 'com.github.iamport:iamport-rest-client-java:0.2.23'
//	implementation 'com.siot.IamportRestClient:iamport-rest-client-java:0.2.23'

	// Security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	implementation 'io.netty:netty-resolver-dns-native-macos:4.1.91.Final:osx-aarch_64'

	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5' // JSON 처리용

	//firebase 사용을 위한 의존성 추가
	implementation 'com.google.firebase:firebase-admin:9.3.0'

	//	스웨거 의존성 추가
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.15'

	implementation 'com.amazonaws:aws-java-sdk-secretsmanager:1.12.300'

}

ext{
	set('springCloudVersion', '2021.0.8')
}

dependencyManagement {
	imports{
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
